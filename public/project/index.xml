<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project Portfolio on hydroblog</title>
    <link>https://hydroblog.netlify.com/project/</link>
    <description>Recent content in Project Portfolio on hydroblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 19 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hydroblog.netlify.com/project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>hydroapps is a package that runs hydrological shiny apps</title>
      <link>https://hydroblog.netlify.com/project/hydroapps/</link>
      <pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hydroblog.netlify.com/project/hydroapps/</guid>
      <description>hydroappsThe goal of {hydroapps} is to to create apps for resource management in the context of hydrology monitoring and reporting. This package relies heavily on USGS API and wouldn’t be possible with out it (much thanks). However, this package is highly experimental and is used mostly by myself but I think it’s worth sharing! Please enjoy and contributions are welcome!
GoalsAs of 08/07/2021 the app is functional.</description>
    </item>
    
    <item>
      <title>wildlandhydRo is a package that leverages USGS and SNOTEL APIs.</title>
      <link>https://hydroblog.netlify.com/project/wildlandhydro/</link>
      <pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hydroblog.netlify.com/project/wildlandhydro/</guid>
      <description>IntroThe goal of wildlandhydRo is to create wrapper functions around commonly used packages like streamstats, snotelr and dataRetrieval and prepare them for chunk-based parallelism, data munging and reporting. Basically, a package for me but worth sharing with others.
InstallationYou can install the development version from GitHub with:
# install.packages(&amp;quot;devtools&amp;quot;)devtools::install_github(&amp;quot;joshualerickson/wildlandhydRo&amp;quot;)ExamplesBelow are some common examples that I routinely use with the package.
ParallelWith {wildlandhydRo} it is really easy to get station data in parallel.</description>
    </item>
    
    <item>
      <title>exploreRGEE</title>
      <link>https://hydroblog.netlify.com/project/explorergee/</link>
      <pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hydroblog.netlify.com/project/explorergee/</guid>
      <description>exploreRGEEThe goal of exploreRGEE is to explore Google Earth Engine (GEE) in the Rstudio IDE. This package uses bindings and functions from rgee and other spatial packages (sf, leaflet) to explore Google Earth Engine collections relatively quickly while using R. This package is meant to be exploratory and experimental but also provides the user quick functions to reproducible tasks, e.g. repetitive workflows. The reason for doing this inR is that some people are not familiar with JavaScript or Python but versed in R and this provides easy access to use GEE with commonly used methods for exploratory data analysis (tidyverse).</description>
    </item>
    
  </channel>
</rss>
